{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoadung: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 단순 문자열로 액션타입을 정해서 오타가 날것을 방지해 변수에 담기\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'okian',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '희무'\n  }, {\n    nickname: '자두'\n  }, {\n    nickname: '쯔낭'\n  }],\n  Followers: [{\n    nickname: '희무'\n  }, {\n    nickname: '자두'\n  }, {\n    nickname: '쯔낭'\n  }]\n});\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        // 로딩할 때에는 에러 없애주기\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: {\n          // ...state.me,\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoadung","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","error","signUpLoading"],"mappings":"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","sourcesContent":["export const initialState = {\n    logInLoading: false, // 로그인 시도중\n    logInDone: false,\n    logInError: null,\n    logOutLoading: false, // 로그아웃 시도중\n    logOutDone: false,\n    logOutError: null,\n    signUpLoadung: false, // 회원가입 시도중\n    signUpDone: false,\n    signUpError: null,\n    changeNicknameLoading: false, // 닉네임 변경 시도\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    me: null,\n    signUpData: {},\n    loginData: {},\n}\n\n// 단순 문자열로 액션타입을 정해서 오타가 날것을 방지해 변수에 담기\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = (data) => ({ \n    ...data, \n    nickname: 'okian',\n    id: 1,\n    Posts: [{id: 1}],\n    Followings: [{nickname: '희무'}, {nickname: '자두'}, {nickname: '쯔낭'}],\n    Followers: [{nickname: '희무'}, {nickname: '자두'}, {nickname: '쯔낭'}],\n});\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    }\n}\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOG_IN_REQUEST :\n            return {\n                ...state,\n                logInLoading: true,\n                logInError: null, // 로딩할 때에는 에러 없애주기\n                logInDone: false,\n            };\n        case LOG_IN_SUCCESS :\n            return {\n                ...state,\n                logInLoading: false,\n                logInDone: true,\n                me: dummyUser(action.data),\n            };\n        case LOG_IN_FAILURE :\n            return {\n                ...state,\n                logInLoading: false,\n                logInError: action.error,\n            };\n        case LOG_OUT_REQUEST :\n            return {\n                ...state,\n                logOutLoading: true,\n                logOutDone: false,\n                logOutError: null,\n            };\n        case LOG_OUT_SUCCESS :\n            return {\n                ...state,\n                logOutLoading: false,\n                logOutDone: true,\n                me: null,\n            };\n        case LOG_OUT_FAILURE :\n            return {\n                ...state,\n                logOutLoading: false,\n                logOutError: action.error,\n            };\n        case SIGN_UP_REQUEST :\n            return {\n                ...state,\n                signUpLoading: true,\n                signUpDone: false,\n                signUpError: null,\n            };\n        case SIGN_UP_SUCCESS :\n            return {\n                ...state,\n                signUpLoading: false,\n                signUpDone: true,\n            };\n        case SIGN_UP_FAILURE :\n            return {\n                ...state,\n                signUpLoading: false,\n                signUpError: action.error,\n            };\n            \n        case CHANGE_NICKNAME_REQUEST :\n            return {\n                ...state,\n                changeNicknameLoading: true,\n                changeNicknameDone: false,\n                changeNicknameError: null,\n            };\n        case CHANGE_NICKNAME_SUCCESS :\n            return {\n                ...state,\n                changeNicknameLoading: false,\n                changeNicknameDone: true,\n            };\n        case CHANGE_NICKNAME_FAILURE :\n            return {\n                ...state,\n                changeNicknameLoading: false,\n                changeNicknameError: action.error,\n            };\n        case ADD_POST_TO_ME:\n            return {\n                ...state,\n                me: {\n                    // ...state.me,\n                    Posts: [{ id: action.data }, ...state.me.Posts],\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}