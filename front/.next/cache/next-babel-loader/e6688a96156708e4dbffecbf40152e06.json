{"ast":null,"code":"var _jsxFileName = \"/Users/oki-an/Desktop/project/react-next-nodebird/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    // true를 false로 false를 ture로 토글하기 / prev에는 useState값이 들어가 있음\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: postId\n    });\n  }); // 옵셔널체이닝 연산자 me.id가 있으면 들어가고 아니면 undefined \n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 31\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"p+QMtinb9y95hSOYFJulH3y+QKQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/components/PostCard.js"],"names":["React","useCallback","useState","PropTypes","useDispatch","useSelector","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","onRemovePost","type","data","postId","id","state","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nconst PostCard = ({ post }) => {\n    const dispatch = useDispatch();\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const onToggleLike = useCallback(() => {\n        // true를 false로 false를 ture로 토글하기 / prev에는 useState값이 들어가 있음\n        setLiked((prev) => !prev);\n    }, [])\n    \n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened((prev) => !prev)\n    }, [])\n\n    const onRemovePost = useCallback(() => {\n        dispatch({\n            type: REMOVE_POST_REQUEST,\n            data: postId\n        })\n    });\n\n    // 옵셔널체이닝 연산자 me.id가 있으면 들어가고 아니면 undefined \n    const id = useSelector((state) => state.user.me?.id);\n    return (\n        <div style={{ marginBottom: 20 }}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked\n                    ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n                    : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id \n                            ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\" onClick={onRemovePost}>삭제</Button>\n                                </>\n                            ) \n                            : <Button>신고</Button> }\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={<PostCardContent postData={post.content} />}\n                />\n            </Card>\n            {commentFormOpened && (\n                <div>\n                    <CommentForm post={post}/>\n                    <List \n                        header={`${post.Comments.length}개의 댓글`}\n                        itemLayout=\"horizontal\"\n                        dataSource={post.Comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                    content={item.content}\n                                />\n                            </li>\n                        )}\n                    />\n                </div>\n            )}\n            {/* <CommentForm /> */}\n            {/* <Comments /> */}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}