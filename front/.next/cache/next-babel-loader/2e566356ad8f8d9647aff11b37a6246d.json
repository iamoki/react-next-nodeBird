{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  //로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  //로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      console.log('reducer login');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'zerocho'\n        })\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequestAction","reducer","action","console","log","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE,KADW;AACJ;AACpBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAGH;AACrBC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB;AASP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACAD,IAAAA,QAAQ,CAACG,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAW,YAAX,EACCC,IADD,CACOC,GAAD,IAAS;AACXP,MAAAA,QAAQ,CAACQ,kBAAkB,CAACD,GAAG,CAACR,IAAL,CAAnB,CAAR;AACH,KAHD,EAICU,KAJD,CAIQC,GAAD,IAAS;AACZV,MAAAA,QAAQ,CAACW,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACH,KAND;AAOH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMP,kBAAkB,GAAIJ,IAAD,IAAU;AACxC,SAAO;AACHa,IAAAA,IAAI,EAAE,gBADH;AAEHb,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMc,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAMP,MAAME,OAAO,GAAG,CAACZ,KAAK,GAAGX,YAAT,EAAuBwB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,gBAAL;AACII,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,6CACOf,KADP;AAEIV,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAK,gBAAL;AACI,6CACOU,KADP;AAEIV,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAIIE,QAAAA,EAAE,kCAAOoB,MAAM,CAAChB,IAAd;AAAoBmB,UAAAA,QAAQ,EAAE;AAA9B;AAJN;;AAMJ,SAAK,gBAAL;AACI,6CACOhB,KADP;AAEIV,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;;AAKJ,SAAK,iBAAL;AACI,6CACOS,KADP;AAEIR,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAK,iBAAL;AACI,6CACOQ,KADP;AAEIR,QAAAA,YAAY,EAAE,KAFlB;AAGID,QAAAA,UAAU,EAAE,KAHhB;AAIIE,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAK,iBAAL;AACI,6CACOO,KADP;AAEIR,QAAAA,YAAY,EAAE;AAFlB;;AAIJ;AACI,aAAOQ,KAAP;AAtCR;AAwCH,CAzCD;;AA2CA,eAAeY,OAAf","sourcesContent":["export const initialState = {\n    isLoggingIn: false, //로그인 시도중\n    isLoggedIn: false,\n    isLoggingOut: false, //로그아웃 시도중\n    me: null,\n    signUpData: {},\n    loginData: {},\n}\n\nexport const loginAction = (data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        dispatch(loginRequestAction());\n        axios.post('/api/login')\n        .then((res) => {\n            dispatch(loginSuccessAction(res.data));\n        })\n        .catch((err) => {\n            dispatch(loginFailureAction(err));\n        })\n    }\n}\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: 'LOG_IN_REQUEST',\n        data,\n    }\n}\n\nexport const logoutRequestAction = () => {\n    return {\n        type: 'LOG_OUT_REQUEST',\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOG_IN_REQUEST' :\n            console.log('reducer login');\n            return {\n                ...state,\n                isLoggingIn: true,\n            };\n        case 'LOG_IN_SUCCESS' :\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: true,\n                me: { ...action.data, nickname: 'zerocho' },\n            };\n        case 'LOG_IN_FAILURE' :\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false,\n            };\n        case 'LOG_OUT_REQUEST' :\n            return {\n                ...state,\n                isLoggingOut: true,\n            };\n        case 'LOG_OUT_SUCCESS' :\n            return {\n                ...state,\n                isLoggingOut: false,\n                isLoggedIn: false,\n                me: null,\n            };\n        case 'LOG_OUT_FAILURE' :\n            return {\n                ...state,\n                isLoggingOut: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}