{"ast":null,"code":"var _jsxFileName = \"/Users/oki-an/Desktop/project/react-next-nodebird/front/components/FollowButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading;\n\n  var dispatch = useDispatch(); // 게시글 작성사 목록의 아이디가 내가 팔로우 하고있다면 그사람들의 리스트\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Following.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    // 팔로우 하고있다면 언팔액션\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST\n      });\n    }\n  }, [isFollowing]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClickButton: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FollowButton, \"EmyM98b7yhkDGxSSUGFn8Q9dj0c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FollowButton;\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/components/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useDispatch","useSelector","UNFOLLOW_REQUEST","FollowButton","post","state","user","me","followLoading","unfollowLoading","dispatch","isFollowing","Following","find","v","id","User","onClickButton","type","FOLLOW_REQUEST","propTypes","object","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC/B,qBAA+CH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1D;AAAA,MAAQC,EAAR,gBAAQA,EAAR;AAAA,MAAYC,aAAZ,gBAAYA,aAAZ;AAAA,MAA2BC,eAA3B,gBAA2BA,eAA3B;;AACA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B,CAF+B,CAG/B;;AACA,MAAMW,WAAW,GAAGJ,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEK,SAAJ,CAAcC,IAAd,CAAmB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA1B;AAAA,GAAnB,CAApB;AACA,MAAME,aAAa,GAAGpB,WAAW,CAAC,YAAM;AACpC;AACA,QAAGc,WAAH,EAAgB;AACZD,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEhB;AADD,OAAD,CAAR;AAGH,KAJD,MAIO;AACHQ,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEC;AADD,OAAD,CAAR;AAGH;AACJ,GAXgC,EAW9B,CAACR,WAAD,CAX8B,CAAjC;AAYA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,aAAa,IAAIC,eAAlC;AAAmD,IAAA,aAAa,EAAEQ,aAAlE;AAAA,cACKN,WAAW,GAAG,MAAH,GAAY;AAD5B;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAtBD;;GAAMR,Y;UAC6CF,W,EAC9BD,W;;;KAFfG,Y;AAwBNA,YAAY,CAACiB,SAAb,GAAyB;AACrBhB,EAAAA,IAAI,EAAEL,SAAS,CAACsB,MAAV,CAAiBC;AADF,CAAzB;AAIA,eAAenB,YAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\n\n\nconst FollowButton = ({ post }) => {\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    // 게시글 작성사 목록의 아이디가 내가 팔로우 하고있다면 그사람들의 리스트\n    const isFollowing = me?.Following.find((v) => v.id === post.User.id);\n    const onClickButton = useCallback(() => {\n        // 팔로우 하고있다면 언팔액션\n        if(isFollowing) {\n            dispatch({\n                type: UNFOLLOW_REQUEST,\n            })\n        } else {\n            dispatch({\n                type: FOLLOW_REQUEST,\n            })\n        }\n    }, [isFollowing]);\n    return (\n        <Button loading={followLoading || unfollowLoading} onClickButton={onClickButton}>\n            {isFollowing ? '언팔로우' : '팔로우'}\n        </Button>\n    );\n};\n\nFollowButton.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}