{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutFailure: null,\n  signUpLoadung: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpFailre: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 단순 문자열로 액션타입을 정해서 오타가 날것을 방지해 변수에 담기\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null // 로딩할 때에는 에러 없애주기\n\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'okian'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutFailure","signUpLoadung","signUpDone","signUpFailre","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","isLoggingIn","isLoggedIn","nickname","isLoggingOut"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,KADU;AACH;AACrBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,UAAU,EAAE,IAHY;AAIxBC,EAAAA,aAAa,EAAE,KAJS;AAIF;AACtBC,EAAAA,UAAU,EAAE,KALY;AAMxBC,EAAAA,aAAa,EAAE,IANS;AAOxBC,EAAAA,aAAa,EAAE,KAPS;AAOF;AACtBC,EAAAA,UAAU,EAAE,KARY;AASxBC,EAAAA,YAAY,EAAE,IATU;AAUxBC,EAAAA,EAAE,EAAE,IAVoB;AAWxBC,EAAAA,UAAU,EAAE,EAXY;AAYxBC,EAAAA,SAAS,EAAE;AAZa,CAArB,C,CAeP;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAGP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEjB,cADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAEd;AADH,GAAP;AAGH,CAJM;;AAMP,MAAMgB,OAAO,GAAG,CAACC,KAAK,GAAGjC,YAAT,EAAuBkC,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKjB,cAAL;AACI,6CACOoB,KADP;AAEIhC,QAAAA,YAAY,EAAE,IAFlB;AAGIE,QAAAA,UAAU,EAAE,IAHhB,CAGsB;;AAHtB;;AAKJ,SAAKW,cAAL;AACI,6CACOmB,KADP;AAEIE,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAII1B,QAAAA,EAAE,kCAAOwB,MAAM,CAACL,IAAd;AAAoBQ,UAAAA,QAAQ,EAAE;AAA9B;AAJN;;AAMJ,SAAKtB,cAAL;AACI,6CACOkB,KADP;AAEIE,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;;AAKJ,SAAKpB,eAAL;AACI,6CACOiB,KADP;AAEIK,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAKrB,eAAL;AACI,6CACOgB,KADP;AAEIK,QAAAA,YAAY,EAAE,KAFlB;AAGIF,QAAAA,UAAU,EAAE,KAHhB;AAII1B,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAKQ,eAAL;AACI,6CACOe,KADP;AAEIK,QAAAA,YAAY,EAAE;AAFlB;;AAIJ;AACI,aAAOL,KAAP;AAtCR;AAwCH,CAzCD;;AA2CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    logInLoading: false, // 로그인 시도중\n    logInDone: false,\n    logInError: null,\n    logOutLoading: false, // 로그아웃 시도중\n    logOutDone: false,\n    logOutFailure: null,\n    signUpLoadung: false, // 회원가입 시도중\n    signUpDone: false,\n    signUpFailre: null,\n    me: null,\n    signUpData: {},\n    loginData: {},\n}\n\n// 단순 문자열로 액션타입을 정해서 오타가 날것을 방지해 변수에 담기\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    }\n}\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOG_IN_REQUEST :\n            return {\n                ...state,\n                logInLoading: true,\n                logInError: null, // 로딩할 때에는 에러 없애주기\n            };\n        case LOG_IN_SUCCESS :\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: true,\n                me: { ...action.data, nickname: 'okian' },\n            };\n        case LOG_IN_FAILURE :\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false,\n            };\n        case LOG_OUT_REQUEST :\n            return {\n                ...state,\n                isLoggingOut: true,\n            };\n        case LOG_OUT_SUCCESS :\n            return {\n                ...state,\n                isLoggingOut: false,\n                isLoggedIn: false,\n                me: null,\n            };\n        case LOG_OUT_FAILURE :\n            return {\n                ...state,\n                isLoggingOut: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}