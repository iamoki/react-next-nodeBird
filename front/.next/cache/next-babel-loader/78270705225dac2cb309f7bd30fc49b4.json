{"ast":null,"code":"// configureStore를 만드는 법\n//next-redux-wrapper를 설치해 createWrapper를 가져올 수 있다. \nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // if(typeof action === 'function') {\n  //     return action(dispatch, getState);\n  // }\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  // 아래 코드가 트루면 redux에 관해서 자세한 설명이 나온다.\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACvE;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAND;;AAQA,MAAMG,cAAc,GAAG,MAAM;AACzB,QAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,QAAMY,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;AACA,QAAMU,QAAQ,GAAG,QACXhB,OAAO,CAACD,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CADI,GAEXb,mBAAmB,CAACH,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAFzB;AAGA,QAAME,KAAK,GAAGhB,WAAW,CAACG,OAAD,EAAUY,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CATD;;AAWA,MAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;AAC1C;AACAQ,EAAAA,KAAK;AAFqC,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["// configureStore를 만드는 법\n//next-redux-wrapper를 설치해 createWrapper를 가져올 수 있다. \nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    // if(typeof action === 'function') {\n    //     return action(dispatch, getState);\n    // }\n    console.log(action)\n    return next(action);\n}\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n        ? compose(applyMiddleware(...middlewares))\n        : composeWithDevTools(applyMiddleware(...middlewares))\n    const store = createStore(reducer, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, { \n    // 아래 코드가 트루면 redux에 관해서 자세한 설명이 나온다.\n    debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}