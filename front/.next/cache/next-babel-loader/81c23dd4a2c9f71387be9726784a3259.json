{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('sage login'); // fork는 비동기 함수호출\n    // call은 동기 함수호출\n    // const result = yield call(logInAPI, action.data);\n\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow() {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unFollow() {\n  try {\n    // const result = yield call(unFollowAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/sagas/user.js"],"names":["all","fork","takeLatest","delay","put","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","logInAPI","data","post","logIn","action","console","log","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unFollow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { \n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE\n} from '../reducers/user';\n\nfunction logInAPI(data) {\n    return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n    try {\n        console.log('sage login');\n        // fork는 비동기 함수호출\n        // call은 동기 함수호출\n        // const result = yield call(logInAPI, action.data);\n        yield delay(1000);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n        });\n    } catch(err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data\n        });\n    }\n}\n\nfunction logOutAPI() {\n    return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n    try {\n        // const result = yield call(logOutAPI);\n        yield delay(1000);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch(err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data\n        });\n    }\n}\n\nfunction signUpAPI() {\n    return axios.post('/api/logout');\n}\n\nfunction* signUp() {\n    try {\n        // const result = yield call(signUpAPI);\n        yield delay(1000);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch(err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data\n        });\n    }\n}\n\nfunction followAPI() {\n    return axios.post('/api/follow');\n}\n\nfunction* follow() {\n    try {\n        // const result = yield call(followAPI);\n        yield delay(1000);\n        yield put({\n            type: FOLLOW_SUCCESS,\n        });\n    } catch(err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data\n        });\n    }\n}\n\nfunction* unFollow() {\n    try {\n        // const result = yield call(unFollowAPI);\n        yield delay(1000);\n        yield put({\n            type: FOLLOW_SUCCESS,\n        });\n    } catch(err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchFollow),\n        fork(watchUnfollow),\n    ])\n}"]},"metadata":{},"sourceType":"module"}