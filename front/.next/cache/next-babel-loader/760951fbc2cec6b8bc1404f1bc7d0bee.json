{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoadung: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 단순 문자열로 액션타입을 정해서 오타가 날것을 방지해 변수에 담기\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'okian',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '희무'\n  }, {\n    nickname: '자두'\n  }, {\n    nickname: '쯔낭'\n  }],\n  Followers: [{\n    nickname: '희무'\n  }, {\n    nickname: '자두'\n  }, {\n    nickname: '쯔낭'\n  }]\n});\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followError = null; // 로딩할 때에는 에러 없애주기\n\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followError = null; // 로딩할 때에는 에러 없애주기\n\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null; // 로딩할 때에는 에러 없애주기\n\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //     },\n      // };\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoadung","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","followLoading","followError","followDone","error","signUpLoading","unshift","filter","v"],"mappings":"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","sourcesContent":["import produce from \"immer\";\n\nexport const initialState = {\n    logInLoading: false, // 로그인 시도중\n    logInDone: false,\n    logInError: null,\n    logOutLoading: false, // 로그아웃 시도중\n    logOutDone: false,\n    logOutError: null,\n    signUpLoadung: false, // 회원가입 시도중\n    signUpDone: false,\n    signUpError: null,\n    changeNicknameLoading: false, // 닉네임 변경 시도\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    me: null,\n    signUpData: {},\n    loginData: {},\n}\n\n// 단순 문자열로 액션타입을 정해서 오타가 날것을 방지해 변수에 담기\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = (data) => ({ \n    ...data, \n    nickname: 'okian',\n    id: 1,\n    Posts: [{id: 1}],\n    Followings: [{nickname: '희무'}, {nickname: '자두'}, {nickname: '쯔낭'}],\n    Followers: [{nickname: '희무'}, {nickname: '자두'}, {nickname: '쯔낭'}],\n});\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    }\n}\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case FOLLOW_REQUEST :\n                draft.followLoading = true;\n                draft.followError = null; // 로딩할 때에는 에러 없애주기\n                draft.followDone = false;\n                break;\n            case FOLLOW_SUCCESS :\n                draft.followLoading = false;\n                draft.followDone = true;\n                draft.me = dummyUser(action.data);\n                break;\n            case FOLLOW_FAILURE :\n                draft.followLoading = false;\n                draft.followError = action.error;\n                break;\n            case FOLLOW_REQUEST :\n                draft.followLoading = true;\n                draft.followError = null; // 로딩할 때에는 에러 없애주기\n                draft.followDone = false;\n                break;\n            case FOLLOW_SUCCESS :\n                draft.followLoading = false;\n                draft.followDone = true;\n                draft.me = dummyUser(action.data);\n                break;\n            case FOLLOW_FAILURE :\n                draft.followLoading = false;\n                draft.followError = action.error;\n                break;\n            case LOG_IN_REQUEST :\n                draft.logInLoading = true;\n                draft.logInError = null; // 로딩할 때에는 에러 없애주기\n                draft.logInDone = false;\n                break;\n            case LOG_IN_SUCCESS :\n                draft.logInLoading = false;\n                draft.logInDone = true;\n                draft.me = dummyUser(action.data);\n                break;\n            case LOG_IN_FAILURE :\n                draft.logInLoading = false;\n                draft.logInError = action.error;\n                break;\n            case LOG_OUT_REQUEST :\n                draft.logOutLoading = true;\n                draft.logOutDone = false;\n                draft.logOutError = null;\n                break;\n            case LOG_OUT_SUCCESS :\n                draft.logOutLoading = false;\n                draft.logOutDone = true;\n                draft.me = null;\n                break;\n            case LOG_OUT_FAILURE :\n                draft.logOutLoading = false;\n                draft.logOutError = action.error;\n                break;\n            case SIGN_UP_REQUEST :\n                draft.signUpLoading = true;\n                draft.signUpDone = false;\n                draft.signUpError = null;\n                break;\n            case SIGN_UP_SUCCESS :\n                draft.signUpLoading = false;\n                draft.signUpDone = true;\n                break;\n            case SIGN_UP_FAILURE :\n                draft.signUpLoading = false;\n                draft.signUpError = action.error;\n                break;\n            case CHANGE_NICKNAME_REQUEST :\n                draft.changeNicknameLoading = true;\n                draft.changeNicknameDone = false;\n                draft.changeNicknameError = null;\n                break;\n            case CHANGE_NICKNAME_SUCCESS :\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameDone = true;\n                break;\n            case CHANGE_NICKNAME_FAILURE :\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameError = action.error;\n                break;\n            case ADD_POST_TO_ME:\n                draft.me.Posts.unshift({ id: action.data });\n                break;\n            case REMOVE_POST_OF_ME:\n                draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n                break;\n                // return {\n                //     ...state,\n                //     me: {\n                //         ...state.me,\n                //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n                //     },\n                // };\n            default:\n                break;\n        }\n\n    });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}