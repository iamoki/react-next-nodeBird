{"ast":null,"code":"// configureStore를 만드는 법\n//next-redux-wrapper를 설치해 createWrapper를 가져올 수 있다. \nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var enhancer = false ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  var store = createStore(reducer, enhancer); // store.dispatch({\n  //     type: 'CHANGE_NICKNAME',\n  //     data: 'odokodok',\n  // })\n\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  // 아래 코드가 트루면 redux에 관해서 자세한 설명이 나온다.\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/User/Desktop/react-next-nodeBird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","enhancer","store","wrapper","debug"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,QAAQ,GAAG,QACXL,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CADI,GAEXG,mBAAmB,CAACH,eAAe,CAAC,EAAD,CAAhB,CAFzB;AAGA,MAAMO,KAAK,GAAGL,WAAW,CAACE,OAAD,EAAUE,QAAV,CAAzB,CAJyB,CAKzB;AACA;AACA;AACA;;AACA,SAAOC,KAAP;AACH,CAVD;;AAYA,IAAMC,OAAO,GAAGT,aAAa,CAACM,cAAD,EAAiB;AAC1C;AACAI,EAAAA,KAAK;AAFqC,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["// configureStore를 만드는 법\r\n//next-redux-wrapper를 설치해 createWrapper를 가져올 수 있다. \r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware([]))\r\n        : composeWithDevTools(applyMiddleware([]))\r\n    const store = createStore(reducer, enhancer);\r\n    // store.dispatch({\r\n    //     type: 'CHANGE_NICKNAME',\r\n    //     data: 'odokodok',\r\n    // })\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { \r\n    // 아래 코드가 트루면 redux에 관해서 자세한 설명이 나온다.\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}