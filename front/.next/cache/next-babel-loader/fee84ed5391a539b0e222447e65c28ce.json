{"ast":null,"code":"var _jsxFileName = \"/Users/oki-an/Desktop/project/react-next-nodebird/front/components/FollowButton.js\";\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch(); // 게시글 작성사 목록의 아이디가 내가 팔로우 하고있다면 그사람들의 리스트\n\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Following.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    // 팔로우 하고있다면 언팔액션\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClickButton: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/components/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","me","followLoading","unfollowLoading","state","user","dispatch","isFollowing","Following","find","v","id","User","onClickButton","type","data","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAF+B,CAG/B;;AACA,QAAMY,WAAW,GAAGN,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEO,SAAJ,CAAcC,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA7C,CAApB;AACA,QAAME,aAAa,GAAGrB,WAAW,CAAC,MAAM;AACpC;AACA,QAAGe,WAAH,EAAgB;AACZD,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEhB,gBADD;AAELiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KALD,MAKO;AACHL,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEjB,cADD;AAELkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAbgC,EAa9B,CAACJ,WAAD,CAb8B,CAAjC;AAcA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,aAAa,IAAIC,eAAlC;AAAmD,IAAA,aAAa,EAAEU,aAAlE;AAAA,cACKN,WAAW,GAAG,MAAH,GAAY;AAD5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;AA0BAR,YAAY,CAACiB,SAAb,GAAyB;AACrBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,MAAV,CAAiBC;AADF,CAAzB;AAIA,eAAenB,YAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\n\nconst FollowButton = ({ post }) => {\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    // 게시글 작성사 목록의 아이디가 내가 팔로우 하고있다면 그사람들의 리스트\n    const isFollowing = me?.Following.find((v) => v.id === post.User.id);\n    const onClickButton = useCallback(() => {\n        // 팔로우 하고있다면 언팔액션\n        if(isFollowing) {\n            dispatch({\n                type: UNFOLLOW_REQUEST,\n                data: post.User.id,\n            })\n        } else {\n            dispatch({\n                type: FOLLOW_REQUEST,\n                data: post.User.id,\n            })\n        }\n    }, [isFollowing]);\n    return (\n        <Button loading={followLoading || unfollowLoading} onClickButton={onClickButton}>\n            {isFollowing ? '언팔로우' : '팔로우'}\n        </Button>\n    );\n};\n\nFollowButton.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}