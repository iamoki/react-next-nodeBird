{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/oki-an/Desktop/project/react-next-nodebird/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: userId,\n        id: id\n      }\n    });\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/components/CommentForm.js"],"names":["React","useCallback","useInput","PropTypes","Button","Form","Input","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","dispatch","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,kBAA2CT,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOa,WAAP;AAAA,MAAoBC,mBAApB;;AACA,MAAMC,eAAe,GAAGhB,WAAW,CAAC,YAAM;AACtCiB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACAK,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb,mBADD;AAELc,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEd,IAAI,CAACC,EAArC;AAAyCc,QAAAA,MAAM,EAANA,MAAzC;AAAiDd,QAAAA,EAAE,EAAFA;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACI,WAAD,CANgC,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAES,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEZ,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEU,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAlBD;;GAAMpB,W;UACSF,W,EACgCL,Q;;;KAFzCO,W;AAoBNA,WAAW,CAACqB,SAAZ,GAAuB;AACnBpB,EAAAA,IAAI,EAAEP,SAAS,CAAC4B,MAAV,CAAiBC;AADJ,CAAvB;AAIA,eAAevB,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\n\nconst CommentForm = ({ post }) => {\n    const id = useSelector((state) => state.user.me?.id);\n    const [commentText, onChangeCommentText] = useInput('');\n    const onSubmitComment = useCallback(() => {\n        console.log(post.id, commentText);\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, postId: post.id, userId, id}\n        })\n    }, [commentText]);\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nCommentForm.propTypes ={\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}