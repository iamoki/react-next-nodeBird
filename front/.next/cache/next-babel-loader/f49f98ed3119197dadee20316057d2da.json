{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/oki-an/Desktop/project/react-next-nodebird/front/sagas/post.js"],"names":["all","fork","put","delay","takeLatest","axios","addPostAPI","data","post","addPost","action","type","ADD_POST_SUCCESS","err","ADD_POST_FAILURE","response","watchAddPost","ADD_POST_REQUEST","postSaga","watchAddComment"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEC;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAMC,GAAN,EAAW;AACT,UAAMX,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEG,gBADA;AAENP,MAAAA,IAAI,EAAEM,GAAG,CAACE,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,YAAV,GAAyB;AACrB,QAAMZ,UAAU,CAACa,gBAAD,EAAmBR,OAAnB,CAAhB;AACH;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNC,IAAI,CAACe,YAAD,CADE,EAENf,IAAI,CAACkB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, put, delay, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n    return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n    try {\n        // const result = yield call(addPostAPI, action.data);\n        yield delay(1000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n        });\n    } catch(err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            data: err.response.data\n        });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n    ]);\n}\n\n"]},"metadata":{},"sourceType":"module"}